name: Build k0s amd64

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      airgap-image-bundle:
        type: boolean
        default: true
    outputs:
      k0s-executable-name:
        description: The name of the k0s executable (target-dependent).
        value: ${{ jobs.build.outputs.k0s-executable-name }}
      cache-key:
        description: The compiled executable's cache key.
        value: ${{ jobs.build.outputs.cache-key }}
      airgap-image-bundle-cache-key:
        description: The airgap image bundle's cache key.
        value: ${{ jobs.build.outputs.airgap-image-bundle-cache-key }}

jobs:
  build:
    name: ${{ inputs.target }}
    runs-on: ubuntu-22.04

    outputs:
      k0s-executable-name: ${{ steps.build-prepare.outputs.k0s-executable-name }}
      cache-key: build-k0s-amd64-${{ inputs.target }}-compiled-executable-${{ github.sha }}
      airgap-image-bundle-cache-key: build-k0s-amd64-${{ inputs.target }}-airgap-image-bundle-${{ steps.image-bundle-source.outputs.hash }}

    steps:
      - name: "Build :: Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # for `git describe`
          persist-credentials: false

      - name: "Build :: Prepare"
        id: build-prepare
        env:
          TARGET: ${{ matrix.target }}
        run: |
          .github/workflows/prepare-build-env.sh
          if [ "TARGET" = windows ]; then
            echo k0s-executable-name=k0s.exe >>"$GITHUB_OUTPUT"
          else
            echo k0s-executable-name=k0s >>"$GITHUB_OUTPUT"
          fi

      - name: "Cache :: k0s"
        uses: actions/cache@v3
        id: cache-compiled-executable
        with:
          key: build-k0s-amd64-${{ inputs.target }}-compiled-executable-${{ github.sha }}
          path: |
            ${{ steps.build-prepare.outputs.k0s-executable-name }}
            airgap-image-bundle-hash.txt

      - name: "Cache :: embedded binaries"
        uses: actions/cache@v3
        if: steps.cache-compiled-executable.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-embedded-bins-${{ hashFiles('embedded-bins/**/*') }}
          path: |
            .bins.${{ inputs.target }}.stamp
            bindata_${{ inputs.target }}
            embedded-bins/staging/${{ inputs.target }}/bin/
            embedded-bins/Makefile.variables
            pkg/assets/zz_generated_offsets_${{ inputs.target }}.go

      - name: "Cache :: GOCACHE"
        uses: actions/cache@v3
        if: steps.cache-compiled-executable.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-gocache-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            build-k0s-amd64-${{ inputs.target }}-gocache-${{ github.ref_name }}-
          path: |
            build/cache/go/build

      - name: "Cache :: GOMODCACHE"
        uses: actions/cache@v3
        if: steps.cache-compiled-executable.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-gomodcache-${{ hashFiles('go.sum') }}
          path: |
            build/cache/go/mod

      - name: "Build :: k0s"
        if: steps.cache-compiled-executable.outputs.cache-hit != 'true'
        env:
          TARGET_OS: ${{ inputs.target }}
        run: |
          make bindata
          make --touch codegen
          make build

      - name: "Upload :: k0s"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-prepare.outputs.k0s-executable-name }}
          path: ${{ steps.build-prepare.outputs.k0s-executable-name }}

      - name: "Build :: Airgap image list"
        if: inputs.target == 'linux' && steps.cache-compiled-executable.outputs.cache-hit != 'true'
        run: make airgap-images.txt && cat airgap-images.txt

        # Capture the calculated image bundle source hash in a build output, so
        # it can be shared between the cache actions in this job and in the
        # integration test matrix. Do this in a separate step, as the hashFiles
        # function is evaluated before the step execution. So all the required
        # files need to exist before that.
      - name: "Cache :: Airgap image bundle :: Calculate cache key"
        id: cache-airgap-image-bundle-calc-key
        if: inputs.airgap-image-bundle && inputs.target == 'linux'
        env:
          TARGET: ${{ inputs.target }}
          HASH_VALUE: ${{ hashFiles('Makefile', 'airgap-images.txt', 'hack/image-bundler/*') }}
        run: |
          if [ -f airgap-image-bundle-hash.txt ]; then
            read -r HASH_VALUE <airgap-image-bundle-hash.txt
          else
            printf '%s\n' "$HASH_VALUE" >airgap-image-bundle-hash.txt
          fi
          printf 'cache-key=build-k0s-amd64-%s-airgap-image-bundle-%s\n' "$TARGET" "$HASH_VALUE" >> "$GITHUB_OUTPUT"

      - name: "Cache :: Airgap image bundle"
        id: cache-airgap-image-bundle
        if: inputs.airgap-image-bundle && inputs.target == 'linux'
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-airgap-image-bundle-calc-key.outputs.cache-key }}
          path: airgap-image-bundle-${{ inputs.target }}-amd64.tar
          lookup-only: true

      - name: "Build :: Airgap image bundle"
        if: inputs.airgap-image-bundle && inputs.target == 'linux' && steps.cache-airgap-image-bundle.outputs.cache-hit != 'true'
        run: make airgap-image-bundle-${{ inputs.target }}-amd64.tar
