name: Build k0s amd64

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      use-cache:
        type: boolean
        default: false
        description: Whether to bypass the build if there are cached binaries available.
    outputs:
      cache-key:
        description: The compiled binary's cache key, if use-cache was requested.
        value: ${{ jobs.build.outputs.cache-key }}

jobs:
  build:
    name: ${{ inputs.target }}
    runs-on: ubuntu-22.04

    outputs:
      cache-key: build-k0s-amd64-${{ inputs.target }}-compiled-binary-${{ github.sha }}

    steps:
      - name: Cache compiled binary
        uses: actions/cache@v3
        id: cache-compiled-binary
        if: inputs.use-cache
        with:
          key: build-k0s-amd64-${{ inputs.target }}-compiled-binary-${{ github.sha }}
          path: |
            k0s
            k0s.exe

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        with:
          fetch-depth: 0 # for `git describe`
          persist-credentials: false

      - name: Prepare build environment
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        run: .github/workflows/prepare-build-env.sh

      - name: Cache embedded binaries
        uses: actions/cache@v3
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-embedded-bins-${{ hashFiles('embedded-bins/**/*') }}
          path: |
            .bins.${{ inputs.target }}.stamp
            bindata_${{ inputs.target }}
            embedded-bins/staging/${{ inputs.target }}/bin/
            embedded-bins/Makefile.variables
            pkg/assets/zz_generated_offsets_${{ inputs.target }}.go

      - name: Cache GOCACHE
        uses: actions/cache@v3
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-gocache-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            build-k0s-amd64-${{ inputs.target }}-gocache-${{ github.ref_name }}-
          path: |
            build/cache/go/build

      - name: Cache GOMODCACHE
        uses: actions/cache@v3
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        with:
          key: build-k0s-amd64-${{ inputs.target }}-gomodcache-${{ hashFiles('go.sum') }}
          path: |
            build/cache/go/mod

      - name: Build
        if: steps.cache-compiled-binary.outputs.cache-hit != 'true'
        env:
          TARGET_OS: ${{ inputs.target }}
        run: |
          make bindata
          make --touch codegen
          make build
